---
import StatusBadge from "@/components/StatusBadge.astro";
import InvoiceLayout from "@/layouts/InvoiceLayout.astro";
import {
	Card,
	CardContent,
	CardDescription,
	CardFooter,
	CardHeader,
	CardTitle,
} from "@/components/ui/card";
import data from "@/assets/data.json";
import { createDate, formatMoney, type Country } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import DeleteDialog from "@/components/DeleteDialog";
import AmountDueTable from "@/components/AmountDueTable";

const { id } = Astro.params;

const invoice = data.find((item) => item.id === id)!;

export const prerender = false;
---

<InvoiceLayout id={invoice.id}>
	<Card className="xl:px-6">
		<CardContent className="flex items-center gap-5 justify-between">
			<p>Status</p>
			<div class="md:mr-auto">
				<StatusBadge status={invoice.status} />
			</div>
			<div
				class="hidden items-center justify-center gap-4 bg-background py-4 md:flex xl:py-0"
			>
				<a rel="prefetch" href={`/invoice/${id}/edit`}>
					<Button className="p-6 font-bold" variant="secondary">
						Edit
					</Button>
				</a>
				<DeleteDialog id={id!} client:only="react" />
				<Button className="p-6 font-bold">Mark as Paid</Button>
			</div>
		</CardContent>
	</Card>
	<Card className="xl:p-6">
		<CardHeader className="grid gap-5 md:grid-cols-2">
			<div>
				<CardTitle>
					<span class="text-gray-400">#</span>
					{id}
				</CardTitle>
				<CardDescription>
					{invoice.description}
				</CardDescription>
			</div>
			<div class="md:text-right">
				<p>{invoice.senderAddress.street}</p>
				<p>{invoice.senderAddress.city}</p>
				<p>{invoice.senderAddress.postCode}</p>
				<p>{invoice.senderAddress.country}</p>
			</div>
		</CardHeader>
		<CardContent>
			<div class="grid grid-cols-2 gap-y-7 md:grid-cols-3">
				<div class="flex flex-col gap-11">
					<span>
						<p class="text-gray-700 dark:text-gray-400">
							Invoice Date
						</p>
						<h3>{createDate(invoice.createdAt)}</h3>
					</span>
					<span>
						<p>Payment Due</p>
						<h3>{createDate(invoice.paymentDue)}</h3>
					</span>
				</div>
				<div>
					<p>Bill To</p>
					<h3 class="mb-3">{invoice.clientName}</h3>
					<p>{invoice.clientAddress.street}</p>
					<p>{invoice.clientAddress.city}</p>
					<p>{invoice.clientAddress.postCode}</p>
					<p>{invoice.clientAddress.country}</p>
				</div>
				<div>
					<p>Sent to</p>
					<h3 class="mb-t">{invoice.clientEmail}</h3>
				</div>
			</div>
		</CardContent>
		<CardFooter className="p-5">
			<Card className="bg-invoice-footer w-full">
				<CardContent className="flex md:hidden gap-3 flex-col">
					{
						invoice.items.map((item) => {
							return (
								<div class="flex items-center justify-between">
									<span>
										<h3>{item.name}</h3>
										<h3 class="text-gray-500">
											{item.quantity} x{" "}
											{formatMoney(
												item.price,
												invoice.clientAddress
													.country as Country
											)}
										</h3>
									</span>
									<h3>
										{formatMoney(
											item.total,
											invoice.clientAddress
												.country as Country
										)}
									</h3>
								</div>
							);
						})
					}
				</CardContent>
				<CardContent className="hidden md:block">
					<AmountDueTable items={invoice.items} />
				</CardContent>
				<CardFooter
					className="bg-invoice-footer-total text-white p-5 rounded-b-md"
				>
					<div class="flex w-full items-center justify-between">
						<h3 class="font-medium">Amount Due</h3>
						<h2>
							{
								formatMoney(
									invoice.total,
									invoice.clientAddress.country as Country
								)
							}
						</h2>
					</div>
				</CardFooter>
			</Card>
		</CardFooter>
	</Card>
</InvoiceLayout>
